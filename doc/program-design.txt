main
    parser
        | lexer
        | 
          (get
          
          
    lexer
    
    - builds tokens
    - 
    
Everything is a data structure, and API.
Information is passed around in data structures.
Components have a purpose and APIs so that other components can manipulate them.
Data structures have APIs.
Treat the compilaton unit as an object/component with properties and methods. Encapsulate the information inside the translation unit.
    
Main component: handles data flow and program logic.

    open source file
    pass file to the parser
    parser returns pointer to generated object code
    store pointer to object code
    pass pointer to object code to VM

Parser component: check syntax correctness, do semantic check, and generate code. takes source file as input and outputs object code.
    Properties
    - static struct token *next: stores the next token generated by the lexer
    Recursive-descent routines
    - program()
    - ...

Lexer component: generates token from source file.
    Tokenizer routine
    - get_next_token(): main interface for the tokenizer.
    Utility routines
    - token recognizers
    - evaluators
    - character recognizers
    
ADTs
----

File: represents a file
    Properties
    - char *name: stores file name.
    - FILE *handle: stores file handle.
    ADT
    - openf(const char *name): creates a `File`; opens the given file, and stores the file name to `name` and the file handle to `handle`.
    - closef(File *fp): closes internal file using the handler stored in the `handle` property, and destroys the given File in memory.
    - readc(): reads character from File.
    
ObjectCode: represents object code
    Properties
    - void *data: stores binary data.
    - int len: stores length of object code in bytes.
    ADT
    - create_objcode(): creates new objcode struct.
    - emitb(byte data): writes a byte of data to `bin` and adds 1 to `len`.
    - emitw(word data): writes a word of data to `bin` and adds 2 to `len`.
    - emitd(dword data): writes a dword of data to `bin` and adds 4 to `len`.